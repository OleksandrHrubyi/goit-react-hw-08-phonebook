{"version":3,"sources":["redux/Contacts/contactAction.js","components/Header/header.module.css","redux/Contacts/contacts-selectors.js","service.js","redux/Contacts/contactsOperations.js","components/Container/container.module.css","components/Header/Header.jsx","components/Container/Container.jsx","components/PublicRoute/PublicRoute.jsx","components/PrivatRoute/PrivatRoute.jsx","components/App/App.js","redux/Contacts/contactReducer.js","redux/Contacts/store.js","index.js"],"names":["signupUserRequest","createAction","signupUserSucces","signupUserError","loginUserRequest","loginUserSucces","loginUserError","logoutUserRequest","logoutUserSucces","logoutUserError","refreshUserRequest","refreshUserSucces","refreshUserError","addContactsRequest","addContactsSucces","addContactsError","getContactsRequest","getContactsSucces","getContactsError","deleteContactRequest","deleteContactSucces","deleteContactError","filterContact","module","exports","getAllContacts","state","contacts","items","getFilterState","filter","getUserName","auth","user","name","getTokenState","isLogin","getErrorMessage","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","el","includes","axios","defaults","baseURL","path","defaultModules","set","PNotifyMobile","uuidv4","require","v4","token","headers","common","Authorization","registerUser","value","dispatch","a","data","post","then","response","message","alert","text","loginUser","logoutUser","refreshUser","getState","persistedToken","get","addContactsOperation","contact","id","number","catch","getContactsOperation","deleteContactOperation","contactId","delete","mapDispatchToProps","onLogout","connect","withRouter","children","className","styles","header","container","link","to","authname","type","onClick","nav","login","Container","Component","component","restricted","rest","render","props","Main","React","lazy","Home","Login","Registr","App","this","onRefreshUser","fallback","PrivatRoute","exact","initialUserState","email","createReducer","_","payload","itemReducer","filterReducer","userReducer","combineReducers","contactsReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","querySelector"],"mappings":"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","file":"static/js/main.6f71d40d.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const signupUserRequest = createAction(\"user/signup/Request\");\nexport const signupUserSucces = createAction(\"user/signup/Succes\");\nexport const signupUserError = createAction(\"user/signup/Error\");\n\nexport const loginUserRequest = createAction(\"user/login/Request\");\nexport const loginUserSucces = createAction(\"user/login/Succes\");\nexport const loginUserError = createAction(\"user/login/Error\");\n\nexport const logoutUserRequest = createAction(\"user/logout/Request\");\nexport const logoutUserSucces = createAction(\"user/logout/Succes\");\nexport const logoutUserError = createAction(\"user/logout/Error\");\n\nexport const refreshUserRequest = createAction(\"user/refresh/Request\");\nexport const refreshUserSucces = createAction(\"user/refresh/Succes\");\nexport const refreshUserError = createAction(\"user/refresh/Error\");\n\nexport const addContactsRequest = createAction(\"contact/add/Request\");\nexport const addContactsSucces = createAction(\"contact/add/Succes\");\nexport const addContactsError = createAction(\"contact/add/Error\");\n\nexport const getContactsRequest = createAction(\"contact/get/Request\");\nexport const getContactsSucces = createAction(\"contact/get/Succes\");\nexport const getContactsError = createAction(\"contact/get/Error\");\n\nexport const deleteContactRequest = createAction(\"contact/delete/Request\");\nexport const deleteContactSucces = createAction(\"contact/delete/Succes\");\nexport const deleteContactError = createAction(\"contact/delete/Error\");\n\nexport const filterContact = createAction(\"contact/filter\");\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__HZ6Fg\",\"container\":\"header_container__3hoMn\",\"login\":\"header_login__1zFFR\",\"link\":\"header_link__3XF52\",\"name\":\"header_name__1gB5Y\",\"authname\":\"header_authname__1n1HJ\"};","import { createSelector } from \"reselect\";\n\nexport const getAllContacts = (state) => state.contacts.items;\nexport const getFilterState = (state) => state.contacts.filter;\nexport const getUserName = (state) => state.auth.user.name;\nexport const getTokenState = (state) => state.auth.isLogin;\nexport const getErrorMessage = (state) => state.auth.error;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilterState],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((el) =>\n      el.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst path = \"/contacts\";\n\nexport const signupUser = (data) => {\n  return axios.post(\"/users/signup\", data).then((response) => response.data);\n};\n\nexport const loginUserService = (data) => {\n  return axios.post(\"/users/login\", data).then((response) => response.data);\n};\n\nexport const logOutUserService = (data) => {\n  return axios.post(\"/users/logout\");\n};\n\nexport const refreshUserService = (data) => {\n  return axios.get(\"/users/current\");\n};\n\nexport const getContacts = () => {\n  return axios.get(path).then((response) => response.data);\n};\n\nexport const uploadContacts = (contact) => {\n  return axios.post(path, contact).then((response) => response.data);\n};\n\nexport const removeContacts = (contactId) => {\n  return axios.delete(`${path}/${contactId}`);\n};\n","import axios from \"axios\";\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport { defaults } from \"@pnotify/core\";\n\nimport {\n  uploadContacts,\n  getContacts,\n  removeContacts,\n  signupUser,\n  loginUserService,\n  logOutUserService,\n  refreshUserService,\n} from \"../../service\";\nimport {\n  addContactsRequest,\n  addContactsSucces,\n  addContactsError,\n  getContactsRequest,\n  getContactsSucces,\n  getContactsError,\n  deleteContactRequest,\n  deleteContactSucces,\n  deleteContactError,\n  signupUserRequest,\n  signupUserSucces,\n  signupUserError,\n  loginUserRequest,\n  loginUserSucces,\n  loginUserError,\n  logoutUserRequest,\n  logoutUserSucces,\n  logoutUserError,\n  refreshUserRequest,\n  refreshUserSucces,\n  refreshUserError,\n} from \"./contactAction\";\ndefaultModules.set(PNotifyMobile, {});\n\nconst { v4: uuidv4 } = require(\"uuid\");\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const registerUser = (value) => async (dispatch) => {\n  dispatch(signupUserRequest());\n\n  try {\n    const response = await signupUser(value);\n\n    token.set(response.token);\n    dispatch(signupUserSucces(response));\n  } catch (error) {\n    dispatch(signupUserError(error.message));\n\n    alert({\n      text: error,\n    });\n  }\n};\n\nexport const loginUser = (value) => async (dispatch) => {\n  dispatch(loginUserRequest());\n\n  try {\n    const response = await loginUserService(value);\n    token.set(response.token);\n\n    dispatch(loginUserSucces(response));\n  } catch (error) {\n    dispatch(loginUserError(error.message));\n\n    alert({\n      text: error,\n    });\n  }\n};\n\nexport const logoutUser = () => async (dispatch) => {\n  dispatch(logoutUserRequest());\n\n  try {\n    await logOutUserService();\n    token.unset();\n    dispatch(logoutUserSucces());\n  } catch (error) {\n    dispatch(logoutUserError(error.message));\n    alert({\n      text: error,\n    });\n  }\n};\n\nexport const refreshUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(refreshUserRequest());\n\n  try {\n    const response = await refreshUserService();\n    dispatch(refreshUserSucces(response.data));\n  } catch (error) {\n    dispatch(refreshUserError(error.message));\n    alert({\n      text: error,\n    });\n  }\n};\n\nexport const addContactsOperation = (value) => (dispatch) => {\n  const user = {\n    id: uuidv4(),\n    name: value.name,\n    number: value.number,\n  };\n\n  dispatch(addContactsRequest());\n  uploadContacts(user)\n    .then((response) => dispatch(addContactsSucces(response)))\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nexport const getContactsOperation = (value) => (dispatch) => {\n  dispatch(getContactsRequest());\n  getContacts()\n    .then((response) => dispatch(getContactsSucces(response)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport const deleteContactOperation = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  removeContacts(id)\n    .then((response) => dispatch(deleteContactSucces(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","import styles from \"./header.module.css\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/Contacts/contactsOperations\";\n\nimport {\n  getTokenState,\n  getUserName,\n} from \"../../redux/Contacts/contacts-selectors\";\n\nfunction Header({ children, token, name, onLogout }) {\n  return (\n    <div className={styles.header}>\n      <div className={styles.container}>\n        <NavLink className={styles.link} to=\"/\">\n          Phonebook\n        </NavLink>\n\n        {token ? (\n          <div className={styles.authname}>\n            <span className={styles.name}>Welcome, {name}</span>\n            <button type=\"button\" onClick={onLogout}>\n              Logout\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className={styles.nav}>\n              <NavLink className={styles.login} to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink to=\"/registr\">Registration</NavLink>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  token: getTokenState(state),\n  name: getUserName(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: logoutUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));\n","import styles from \"../Container/container.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getTokenState } from \"../../redux/Contacts/contacts-selectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isLogin,\n  restricted,\n  ...rest\n}) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin && restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLogin: getTokenState(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTokenState } from \"../../redux/Contacts/contacts-selectors\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  token: getTokenState(state),\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);\n","import React, { Suspense } from \"react\";\nimport Header from \"../Header/Header\";\nimport Container from \"../Container/Container\";\nimport { Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PublicRoute from \"../PublicRoute/PublicRoute\";\nimport PrivatRoute from \"../PrivatRoute/PrivatRoute\";\n\nimport { refreshUser } from \"../../redux/Contacts/contactsOperations\";\n\nconst Main = React.lazy(() => import(\"../Main/Main\"));\nconst Home = React.lazy(() => import(\"../Home/Home\"));\nconst Login = React.lazy(() => import(\"../Login/Login\"));\nconst Registr = React.lazy(() => import(\"../Registr/Registr\"));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRefreshUser();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Container>\n          <Suspense fallback={<p>Loud...</p>}>\n            <Switch>\n              <PrivatRoute component={Main} path=\"/contacts\" exact />\n\n              <PublicRoute restricted exact path=\"/\" component={Home} />\n\n              <PublicRoute restricted exact path=\"/login\" component={Login} />\n              <PublicRoute\n                restricted\n                exact\n                path=\"/registr\"\n                component={Registr}\n              />\n            </Switch>\n          </Suspense>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRefreshUser: refreshUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport {\n  filterContact,\n  addContactsSucces,\n  deleteContactSucces,\n  getContactsSucces,\n  signupUserSucces,\n  signupUserError,\n  loginUserSucces,\n  loginUserError,\n  logoutUserSucces,\n  logoutUserError,\n  refreshUserSucces,\n  refreshUserError,\n  refreshUserRequest,\n} from \"./contactAction\";\n\nconst initialUserState = {\n  name: null,\n  email: null,\n};\n\nconst user = createReducer(initialUserState, {\n  [signupUserSucces]: (_, { payload }) => payload.user,\n  [loginUserSucces]: (_, { payload }) => payload.user,\n  [logoutUserSucces]: () => initialUserState,\n  [refreshUserSucces]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [signupUserSucces]: (_, { payload }) => payload.token,\n  [loginUserSucces]: (_, { payload }) => payload.token,\n  [logoutUserSucces]: () => null,\n});\n\nconst error = createReducer(null, {\n  [signupUserError]: (_, { payload }) => payload,\n  [loginUserError]: (_, { payload }) => payload,\n  [logoutUserError]: (_, { payload }) => payload,\n  [refreshUserError]: (_, { payload }) => payload,\n});\n\nconst isLogin = createReducer(false, {\n  [refreshUserSucces]: () => true,\n  [addContactsSucces]: () => true,\n  [getContactsSucces]: () => true,\n  [signupUserSucces]: () => true,\n  [loginUserSucces]: () => true,\n  [refreshUserRequest]: () => true,\n  [logoutUserSucces]: () => false,\n  [loginUserError]: () => false,\n  [signupUserError]: () => false,\n});\n\nconst itemReducer = createReducer([], {\n  [addContactsSucces]: (state, { payload }) => [...state, payload],\n  [getContactsSucces]: (_, { payload }) => payload,\n  [deleteContactSucces]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst userReducer = combineReducers({\n  user,\n  token,\n  error,\n  isLogin,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n});\n\nconst persistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, userReducer);\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  auth: persistedReducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport rootReducer from \"./contactReducer\";\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/Contacts/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}