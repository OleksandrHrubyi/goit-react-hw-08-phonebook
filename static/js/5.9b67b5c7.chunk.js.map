{"version":3,"sources":["components/PhonebookForm/phonebookForm.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","components/Main/main.module.css","components/PhonebookForm/PhonebookForm.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/ContactList/ContactList.jsx","components/Filter/Filter.js","components/Main/Main.jsx","components/ErrorPopup/ErrorPopup.jsx","components/ErrorPopup/errorPopup.module.css"],"names":["module","exports","uuidv4","require","v4","PhonebookForm","state","name","number","errorSameName","errorName","errorNumber","nameInputId","numberInputId","handleSubmit","e","preventDefault","length","setState","setTimeout","props","sameContact","find","el","onSubmit","reset","handleChange","event","currentTarget","value","this","getContacts","className","styles","container","form","label","input","type","placeholder","onChange","btn","CSSTransition","in","unmountOnExit","timeout","classNames","ErrorPopup","text","React","Component","connect","getAllContacts","dispatch","addContactsOperation","getContactsOperation","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","arr","getVisibleContacts","onDel","id","deleteContactOperation","item","href","onClick","getFilterState","filterContact","target","contacts","filterStyles","ContactList","popup"],"mappings":"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","file":"static/js/5.9b67b5c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phonebookForm_container__BTjM4\",\"label\":\"phonebookForm_label__2x-nM\",\"input\":\"phonebookForm_input__2IMMF\",\"form\":\"phonebookForm_form__1RXFU\",\"name\":\"phonebookForm_name__3GvZd\",\"number\":\"phonebookForm_number__21GD7\",\"btn\":\"phonebookForm_btn__CaLIf\",\"enter\":\"phonebookForm_enter__3ETj-\",\"enterActive\":\"phonebookForm_enterActive__25BGR\",\"exit\":\"phonebookForm_exit__1iftJ\",\"exitActive\":\"phonebookForm_exitActive__2S6Wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"contactList_name__3nM-v\",\"number\":\"contactList_number__PxfHE\",\"item\":\"contactList_item__1Zfmy\",\"btn\":\"contactList_btn__277bu\",\"enter\":\"contactList_enter__29KRA\",\"enterActive\":\"contactList_enterActive__3ZojL\",\"exit\":\"contactList_exit__2IyBh\",\"exitActive\":\"contactList_exitActive__3LBAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3DTWP\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"main_enter__3DH9G\",\"enterActive\":\"main_enterActive__6SOd4\",\"exit\":\"main_exit__2HktF\",\"exitActive\":\"main_exitActive__1MzoH\"};","import React from \"react\";\nimport styles from \"../PhonebookForm/phonebookForm.module.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ErrorPopup from \"../ErrorPopup/ErrorPopup\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport {\n  addContactsOperation,\n  getContactsOperation,\n} from \"../../redux/Contacts/contactsOperations\";\nimport { getAllContacts } from \"../../redux/Contacts/contacts-selectors\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\n\nclass PhonebookForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    errorSameName: false,\n    errorName: false,\n    errorNumber: false,\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  componentDidMount() {\n    this.props.getContacts();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.name.length === 0) {\n      this.setState({ errorName: true });\n      setTimeout(() => {\n        this.setState({ errorName: false });\n      }, 3000);\n      return;\n    }\n\n    if (this.state.number.length === 0) {\n      this.setState({ errorNumber: true });\n      setTimeout(() => {\n        this.setState({ errorNumber: false });\n      }, 3000);\n      return;\n    }\n\n    const result = this.props.sameContact.find(\n      (el) => el.name === this.state.name\n    );\n\n    if (result) {\n      this.setState({ errorSameName: true });\n      setTimeout(() => {\n        this.setState({ errorSameName: false });\n      }, 3000);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    return this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            {\" \"}\n            <span className={styles.name}>Name</span>\n            <input\n              className={styles.input}\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              placeholder=\"enter name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            {\" \"}\n            <span className={styles.number}>Number</span>\n            <input\n              className={styles.input}\n              name=\"number\"\n              type=\"number\"\n              value={number}\n              placeholder=\"enter number\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            add contact\n          </button>\n        </form>\n        <CSSTransition\n          in={this.state.errorName}\n          unmountOnExit\n          timeout={3000}\n          classNames={styles}\n        >\n          <ErrorPopup text=\"Please enter name\" />\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.errorNumber}\n          unmountOnExit\n          timeout={3000}\n          classNames={styles}\n        >\n          <ErrorPopup text=\"Please enter number\" />\n        </CSSTransition>\n\n        <CSSTransition\n          in={this.state.errorSameName}\n          timeout={250}\n          classNames={styles}\n          unmountOnExit\n        >\n          <ErrorPopup text=\"this contact already exists \" />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sameContact: getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (value) => dispatch(addContactsOperation(value)),\n  getContacts: () => dispatch(getContactsOperation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import PropTypes from \"prop-types\";\nimport styles from \"../ContactList/contactList.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { deleteContactOperation } from \"../../redux/Contacts/contactsOperations\";\nimport { getVisibleContacts } from \"../../redux/Contacts/contacts-selectors\";\n\nfunction Card({ arr, onDel }) {\n  return (\n    <div className={styles.container}>\n      <TransitionGroup component=\"ul\">\n        {arr.map(({ id, name, number }) => {\n          return (\n            <CSSTransition key={id} timeout={3000} classNames={styles}>\n              <li className={styles.item}>\n                <h3 className={styles.name}>{name} : </h3>\n                <a className={styles.number} href={number}>\n                  {number}\n                </a>\n                <button\n                  className={styles.btn}\n                  onClick={() => {\n                    onDel(id);\n                  }}\n                  type=\"button\"\n                >\n                  delite\n                </button>\n              </li>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  arr: PropTypes.array.isRequired,\n  onDel: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  arr: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDel: (id) => dispatch(deleteContactOperation(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import PropTypes from \"prop-types\";\nimport styles from \"../Filter/filter.module.css\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/Contacts/contactAction\";\nimport { getFilterState } from \"../../redux/Contacts/contacts-selectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className={styles.label}>Find contacts by name</span>\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        placeholder=\"find name\"\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilterState(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PhonebookForm from \"../PhonebookForm/PhonebookForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nimport filterStyles from \"./main.module.css\";\nimport { getAllContacts } from \"../../redux/Contacts/contacts-selectors\";\n\nfunction Main({ contacts }) {\n  return (\n    <>\n      <PhonebookForm />\n\n      <CSSTransition\n        in={contacts.length > 0}\n        classNames={filterStyles}\n        timeout={250}\n        unmountOnExit\n      >\n        <div>\n          {\" \"}\n          <h2>Contacts</h2>\n          <Filter />\n        </div>\n      </CSSTransition>\n\n      <ContactList />\n    </>\n  );\n}\nconst mapStateToProps = (state) => ({\n  contacts: getAllContacts(state),\n});\n\nexport default connect(mapStateToProps, null)(Main);\n","import styles from \"./errorPopup.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ErrorPopup({ text }) {\n  return (\n    <div className={styles.popup}>\n      <h1>{text}</h1>\n    </div>\n  );\n}\n\nErrorPopup.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorPopup;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"errorPopup_popup__1LU-F\",\"enter\":\"errorPopup_enter__1A6xR\",\"enterActive\":\"errorPopup_enterActive__LO9Qe\",\"exit\":\"errorPopup_exit__ZiYjm\",\"exitActive\":\"errorPopup_exitActive__3eRCO\"};"],"sourceRoot":""}